# doc-cache created by Octave 6.4.0
# name: cache
# type: cell
# rows: 3
# columns: 8
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 7
cloglog


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 166
 -- cloglog (X)
     Return the complementary log-log function of X.

     The complementary log-log function is defined as

          cloglog (x) = - log (- log (X))


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 47
Return the complementary log-log function of X.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 8
crosstab


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 722
 -- T = crosstab (X1, X2)
 -- Function File: T = crosstab (X1, ..., XN)
 -- Function File: [T, CHI-2, P, LABELS] = crosstab (...)
     Create a cross-tabulation (contingency table) T from data vectors.

     The inputs X1, X2, ...  XN must be vectors of equal length with a
     data type of numeric, logical, char, or string (cell array).

     As additional return values 'crosstab' returns the chi-square
     statistics CHI-2, its p-value P and a cell array LABELS, containing
     the labels of each input argument.

     Currently CHI-2 and P are available only for 1 or 2-dimensional T,
     with 'crosstab' returning a NaN value for both CHI-2 and P for
     3-dimensional, or more, T.

See also: grp2idx,tabulate.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 66
Create a cross-tabulation (contingency table) T from data vectors.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
ismissing


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 690
 -- TF = ismissing (A)
 -- TF = ismissing (A, INDICATOR)

     Find missing data in a matrix or a string array.

     Given an input vector, matrix or array of cell strings A,
     'ismissing' returns a logical vector or matrix TF with the same
     dimensions as A, where 'true' values match missing values in the
     input data.

     The optional input INDICATOR is an array of values, which represent
     missing values in the input data.  The values which represent
     missing data by default depend on the data type of A:

        * 'NaN': 'single', 'double'.

        * '' '' (white space): 'char'.

        * '{''}': string cells.

See also: all, any, isempty, isnan, rmmissing.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 48
Find missing data in a matrix or a string array.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
logit


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 163
 -- logit (P)
     Compute the logit for each value of P

     The logit is defined as

          logit (P) = log (P / (1-P))

     See also: probit, logistic_cdf.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 37
Compute the logit for each value of P



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
ppplot


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 872
 -- [P, Y] = ppplot (X, DIST, PARAMS)
     Perform a PP-plot (probability plot).

     If F is the CDF of the distribution DIST with parameters PARAMS and
     X a sample vector of length N, the PP-plot graphs ordinate Y(I) = F
     (I-th largest element of X) versus abscissa P(I) = (I - 0.5)/N.  If
     the sample comes from F, the pairs will approximately follow a
     straight line.

     The default for DIST is the standard normal distribution.

     The optional argument PARAMS contains a list of parameters of DIST.

     For example, for a probability plot of the uniform distribution on
     [2,4] and X, use

          ppplot (x, "uniform", 2, 4)

     DIST can be any string for which a function DIST_CDF that
     calculates the CDF of distribution DIST exists.

     If no output is requested then the data are plotted immediately.

     See also: qqplot.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 37
Perform a PP-plot (probability plot).



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
probit


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 139
 -- probit (P)
     Return the probit (the quantile of the standard normal
     distribution) for each element of P.

     See also: logit.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Return the probit (the quantile of the standard normal distribution) for
each...



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 6
qqplot


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1139
 -- [Q, S] = qqplot (X)
 -- [Q, S] = qqplot (X, Y)
 -- [Q, S] = qqplot (X, DIST)
 -- [Q, S] = qqplot (X, Y, PARAMS)
 -- qqplot (...)
     Perform a QQ-plot (quantile plot).

     If F is the CDF of the distribution DIST with parameters PARAMS and
     G its inverse, and X a sample vector of length N, the QQ-plot
     graphs ordinate S(I) = I-th largest element of x versus abscissa
     Q(If) = G((I - 0.5)/N).

     If the sample comes from F, except for a transformation of location
     and scale, the pairs will approximately follow a straight line.

     If the second argument is a vector Y the empirical CDF of Y is used
     as DIST.

     The default for DIST is the standard normal distribution.  The
     optional argument PARAMS contains a list of parameters of DIST.
     For example, for a quantile plot of the uniform distribution on
     [2,4] and X, use

          qqplot (x, "unif", 2, 4)

     DIST can be any string for which a function DISTINV or DIST_INV
     exists that calculates the inverse CDF of distribution DIST.

     If no output arguments are given, the data are plotted directly.

     See also: ppplot.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 34
Perform a QQ-plot (quantile plot).



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
rmmissing


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1336
 -- R = rmmissing (A)
 -- R = rmmissing (A, DIM)
 -- R = rmmissing (..., NAME, VALUE)
 -- [R TF] = rmmissing (...)

     Remove missing or incomplete data from an array or a matrix.

     Given an input array or matrix A, remove rows or columns with
     missing data from a matrix, or remove missing data from an array.
     A can be a numeric or char matrix, a vector or an array of cell
     strings.  R is the return matrix or array, after the removal of
     missing data.

     The values which represent missing data depend on the data type of
     A:

        * 'NaN': 'single', 'double'.

        * '' '' (white space): 'char'.

        * '{''}': string cells.

     Choose to remove rows (default) or columns by setting optional
     input DIM:

        * '1': rows.

        * '2': columns.

     Additional optional parameters are set by NAME-VALUE pairs.  These
     are:

        * 'MinNumMissing': minimum number of missing values to remove an
          entry, row or column, defined as a positive integer number.
          E.g.: if 'MinNumMissing' is set to '2', remove the row of a
          numeric matrix only if it includes 2 or more NaN.

     Optional return value TF is a logical array where 'true' values
     represent removed entries, rows or columns from the original data
     A.

See also: ismissing, isnan.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 60
Remove missing or incomplete data from an array or a matrix.





