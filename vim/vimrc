"         _
"  _   __(_)___ ___  __________
" | | / / / __ `__ \/ ___/ ___/
" | |/ / / / / / / / /  / /__
" |___/_/_/ /_/ /_/_/   \___/

" General Setup -

filetype plugin indent on

set noswapfile
set showcmd
set tags=./.tags
set tagstack
set ruler

set ignorecase
set wildmenu wildmode=list,full
set autochdir
set path+=**

set cursorline
set number
set relativenumber
set mouse=a

set nowrap
set linebreak
set textwidth=80

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set autoindent
set breakindent

set splitright
set splitbelow
set confirm
set hidden

" Appearance -

syntax on
set background=dark
let g:gruvbox_guisp_fallback="bg"
colorscheme gruvbox
set termguicolors

" Vim Plugins -

call plug#begin('~/.vim/plugged')
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'mattn/emmet-vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'jiangmiao/auto-pairs'
Plug 'vimwiki/vimwiki'
Plug 'kezhenxu94/vim-mysql-plugin'
call plug#end()

" Configs -

let g:netrw_bufsettings = 'number nowrap'
let g:UltiSnipsExpandTrigger = "<C-;>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:tex_flavor="latex"
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" Mappings -

let mapleader = "\<Space>"

" Normal Mode Mappings
" Switching buffers & splits
nnoremap <leader>j <C-w>w
nnoremap <leader>k <C-w>w
nnoremap <leader>h :bprevious
nnoremap <leader>l :bnext
nnoremap <leader>s :buffers<CR>:buffer<Space>

" Use system clipboard
nnoremap <C-y> "+y
nnoremap <C-c> "+d
nnoremap <C-p> :normal! "+p<CR>
" Format long paragraphs to textwidth
nnoremap <leader><Space> :normal! magqip`a<CR>
nnoremap <F5> :call RunCode()<CR>

inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-d> <Del>

" Autocompletion
inoremap <expr> j pumvisible()?"<C-n>":"j"
inoremap <expr> k pumvisible()?"<C-p>":"k"
inoremap <expr> q pumvisible()?"<C-e>":"q"

" Command Mode Mappings
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

" Auto Commands -

augroup RunOnEvent
    autocmd!
    autocmd Filetype * set formatoptions=tqcnj1]p
    autocmd BufWritePre * %s/\s\+$//e " strip trailing spaces
augroup END

if has("autocmd")
    " Automatically jump to the last cursor position on entering vim
    autocmd BufReadPost * if line("'\"") > 0 && line ("'\"") <= line("$")
                \ | execute "normal g'\"zz" | endif
endif

" User-defined Commands

command! Vimconfig execute("tabnew ~/.vim/vimrc")
command! Wordbook execute("tabnew ~/Notes/Archives/Lexicon.md")
command! Bookmarks execute("tabnew ~/Notes/Archives/Bookmarks.md")
command! Ftconfig execute("tabnew ~/.vim/after/ftplugin")
command! GenerateTags execute("! ctags -f .tags *")

function RunCode()
    :write!
    :edit %
    :call CodeRunner()
endfunction
